<%
  # Configuration
  title = local_assigns[:title] || "Palabras más frecuentes"
  icon = local_assigns[:icon] || "fa-spell-check"
  icon_color = local_assigns[:icon_color] || "text-indigo-600"
  word_data = local_assigns[:word_data] || []
  description = local_assigns[:description] || "Análisis de frecuencia de palabras clave en el contenido"
  
  # Calculate min/max for size normalization
  counts = word_data.map { |w| w[1] }
  @max_word_count = counts.max || 1
  @min_word_count = counts.min || 1
  
  # Generate unique ID for this component
  component_id = "word-cloud-#{SecureRandom.hex(4)}"
%>

<div class="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden" x-data="{ view: 'cloud', search: '' }">
  <!-- Header -->
  <div class="bg-gradient-to-r from-gray-50 to-white border-b border-gray-200 p-6">
    <div class="flex items-center justify-between mb-4">
      <h3 class="text-lg font-semibold text-gray-900 flex items-center">
        <i class="<%= icon %> <%= icon_color %> mr-2"></i>
        <%= title %>
        <span class="ml-2 text-sm font-normal text-gray-500">(<%= word_data.size %> términos)</span>
      </h3>
      
      <!-- View Toggle -->
      <div class="flex items-center gap-2">
        <button @click="view = 'cloud'" 
                :class="view === 'cloud' ? 'bg-indigo-600 text-white' : 'bg-gray-100 text-gray-600 hover:bg-gray-200'"
                class="px-3 py-1.5 rounded-lg text-sm font-medium transition-all">
          <i class="fa-solid fa-cloud mr-1"></i>
          Nube
        </button>
        <button @click="view = 'list'" 
                :class="view === 'list' ? 'bg-indigo-600 text-white' : 'bg-gray-100 text-gray-600 hover:bg-gray-200'"
                class="px-3 py-1.5 rounded-lg text-sm font-medium transition-all">
          <i class="fa-solid fa-list mr-1"></i>
          Lista
        </button>
      </div>
    </div>
    
    <p class="text-sm text-gray-600 mb-4">
      <i class="fa-solid fa-info-circle mr-1"></i>
      <%= description %>
    </p>
    
    <!-- Search Bar -->
    <div class="relative">
      <input 
        type="text" 
        x-model="search"
        @input="filterWords('<%= component_id %>', $event.target.value)"
        placeholder="Buscar palabra o bigrama..."
        class="w-full px-4 py-2 pl-10 pr-10 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all text-sm">
      <i class="fa-solid fa-search absolute left-3 top-3 text-gray-400"></i>
      <button 
        x-show="search.length > 0"
        @click="search = ''; filterWords('<%= component_id %>', '')"
        class="absolute right-3 top-2.5 text-gray-400 hover:text-gray-600">
        <i class="fa-solid fa-times"></i>
      </button>
    </div>
    
    <!-- Filter Summary -->
    <div class="mt-3 flex items-center gap-4 text-xs">
      <div class="flex items-center gap-2">
        <span class="w-3 h-3 rounded-full bg-gradient-to-r from-green-50 to-emerald-50 border border-green-300"></span>
        <span class="text-gray-600">Positivas (<span class="font-semibold"><%= (@positive_words || []).size %></span>)</span>
      </div>
      <div class="flex items-center gap-2">
        <span class="w-3 h-3 rounded-full bg-gradient-to-r from-red-50 to-rose-50 border border-red-300"></span>
        <span class="text-gray-600">Negativas (<span class="font-semibold"><%= (@negative_words || []).size %></span>)</span>
      </div>
      <div class="flex items-center gap-2">
        <span class="w-3 h-3 rounded-full bg-gradient-to-r from-indigo-50 to-blue-50 border border-indigo-200"></span>
        <span class="text-gray-600">Neutrales (<span class="font-semibold"><%= word_data.size - ((@positive_words || []).size + (@negative_words || []).size) %></span>)</span>
      </div>
    </div>
  </div>
  
  <!-- Content Area -->
  <div class="p-6" id="<%= component_id %>">
    <% if word_data.any? %>
      <!-- Cloud View -->
      <div x-show="view === 'cloud'" x-transition class="word-cloud-container text-center leading-loose">
        <%= render partial: 'tag/modern_tag_pill', collection: word_data, as: :modern_tag_pill %>
      </div>
      
      <!-- List View -->
      <div x-show="view === 'list'" x-transition class="space-y-2">
        <% word_data.each_with_index do |word_pair, index| %>
          <div class="tag-pill-wrapper flex items-center justify-between p-3 rounded-lg border border-gray-200 hover:border-indigo-300 hover:bg-indigo-50 transition-all group"
               data-word="<%= word_pair[0].downcase %>" data-count="<%= word_pair[1] %>">
            <div class="flex items-center gap-3">
              <span class="text-xs font-bold text-gray-400 w-6">
                #<%= index + 1 %>
              </span>
              <span class="font-medium text-gray-900 group-hover:text-indigo-700 transition-colors">
                <%= word_pair[0] %>
              </span>
              <% if @positive_words && @positive_words.include?(word_pair[0]) %>
                <span class="px-2 py-0.5 text-xs rounded-full bg-green-100 text-green-700 font-medium">
                  <i class="fa-solid fa-smile mr-1"></i>Positiva
                </span>
              <% elsif @negative_words && @negative_words.include?(word_pair[0]) %>
                <span class="px-2 py-0.5 text-xs rounded-full bg-red-100 text-red-700 font-medium">
                  <i class="fa-solid fa-frown mr-1"></i>Negativa
                </span>
              <% end %>
            </div>
            <div class="flex items-center gap-3">
              <!-- Visual Bar -->
              <div class="w-32 h-2 bg-gray-200 rounded-full overflow-hidden">
                <div class="h-full bg-gradient-to-r from-indigo-500 to-blue-500 rounded-full transition-all"
                     style="width: <%= [(word_pair[1].to_f / @max_word_count * 100).round(1), 5].max %>%"></div>
              </div>
              <span class="text-sm font-bold text-indigo-600 min-w-[4rem] text-right">
                <%= number_with_delimiter(word_pair[1]) %>
              </span>
            </div>
          </div>
        <% end %>
      </div>
      
      <!-- No Results Message -->
      <div class="no-results-message hidden text-center py-12">
        <i class="fa-solid fa-search text-4xl text-gray-300 mb-4"></i>
        <p class="text-gray-500 font-medium">No se encontraron resultados</p>
        <p class="text-sm text-gray-400 mt-1">Intenta con otra búsqueda</p>
      </div>
    <% else %>
      <!-- Empty State -->
      <div class="text-center py-12">
        <i class="fa-solid fa-inbox text-4xl text-gray-300 mb-4"></i>
        <p class="text-gray-500 font-medium">Sin datos disponibles</p>
        <p class="text-sm text-gray-400 mt-1">No hay palabras para mostrar en este período</p>
      </div>
    <% end %>
  </div>
  
  <!-- Footer Stats -->
  <% if word_data.any? %>
    <div class="bg-gray-50 border-t border-gray-200 px-6 py-4">
      <div class="flex items-center justify-between text-sm">
        <div class="flex items-center gap-6">
          <div>
            <span class="text-gray-500">Total de menciones:</span>
            <span class="font-bold text-gray-900 ml-1">
              <%= number_with_delimiter(word_data.sum { |w| w[1] }) %>
            </span>
          </div>
          <div>
            <span class="text-gray-500">Promedio:</span>
            <span class="font-bold text-gray-900 ml-1">
              <%= (word_data.sum { |w| w[1] }.to_f / word_data.size).round(1) %>
            </span>
          </div>
          <div>
            <span class="text-gray-500">Palabra más frecuente:</span>
            <span class="font-bold text-indigo-600 ml-1">
              "<%= word_data.first[0] %>" (<%= number_with_delimiter(word_data.first[1]) %>)
            </span>
          </div>
        </div>
      </div>
    </div>
  <% end %>
</div>

<!-- JavaScript for Search/Filter -->
<script>
  function filterWords(containerId, searchTerm) {
    const container = document.getElementById(containerId);
    const pills = container.querySelectorAll('.tag-pill-wrapper');
    const noResultsMsg = container.querySelector('.no-results-message');
    let visibleCount = 0;
    
    searchTerm = searchTerm.toLowerCase().trim();
    
    pills.forEach(pill => {
      const word = pill.getAttribute('data-word');
      const matches = word.includes(searchTerm);
      
      if (matches) {
        pill.style.display = '';
        visibleCount++;
      } else {
        pill.style.display = 'none';
      }
    });
    
    // Show/hide no results message
    if (noResultsMsg) {
      if (visibleCount === 0 && searchTerm.length > 0) {
        noResultsMsg.classList.remove('hidden');
      } else {
        noResultsMsg.classList.add('hidden');
      }
    }
  }
</script>

